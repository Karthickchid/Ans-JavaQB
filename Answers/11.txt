11-1. COPIER FEEDER PRESS:

package com.pr;

import java.util.Enumeration;
import java.util.Vector;

class Copier extends Thread {
	private Vector v;
	private Feeder f;
	private Press p;
	int count=0;

	public Copier(Vector v, Feeder f) {
		this.v = v;
		this.f = f;
	}

	public void run() {
		
		synchronized (f) {
			//System.out.println("consumer got lock");
			try {
				f.wait();
				System.out.println("copier:i have printed paper"+count++);
			} catch (InterruptedException e1) {
				
				e1.printStackTrace();
			}
			Enumeration e = v.elements();
			while (e.hasMoreElements()) {
				// System.out.println("the elements.." + e.nextElement());
				count++;
				p = (Press) e.nextElement();

			}
		}
	}
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
package com.pr;

import java.util.Scanner;
import java.util.Vector;

/*package com.pr;

 import java.util.Vector;

 public class Feeder extends Thread
 {
 Copier c=new Copier();
 public void place(Copier c)
 {

 System.out.println("Feeder:I have placed paper");
 c.start();
 }
 }*/

class Feeder extends Thread {
	// public int sum = 1;
	private Vector v;

	Feeder(Vector v) {
		this.v = v;
	}
	public void run() {
		synchronized (this) {
			System.out.println("Feeder:I have placed paper");
			Scanner sc = new Scanner(System.in);
			Vector v = new Vector();
			v.add(v);
			
			System.out.println("Feeder given notification");
			notify();
		}
	}

}
------------------------------------------------------------------------------------------------------------------------------------------------------
package com.pr;
import java.util.*;
public class Press 
{
public static void main(String[] args) 
{
Vector v = new Vector();
Feeder f = new Feeder(v);
Copier c = new Copier(v,f);
c.start();
f.start();
}
}
--------------------------------------------------------------------------------------------------------------------------------------------------
==================================================================================
11-2. ORDER TESTORDER:

import java.util.Scanner;


public class Order {
	public int orderId;
	public String orderName;
	public String category;
	public double price;
	public double tax;
	public void acceptData(){
		Scanner sc=new Scanner(System.in);
		System.out.println("orderid");
		orderId=sc.nextInt();
		System.out.println("ordername");
		orderName=sc.next();
		System.out.println("price");
		price=sc.nextDouble();
		System.out.println("Select a category \n 1.Shipping \n 2.Air \n 3.Road");
		category=sc.next();
		
	}
	public double calTax(){
		String c=category;
		double tax[]=new double[3];
		tax[0]=(price*15)/100;
		tax[1]=(price*25)/100;
		tax[2]=(price*8)/100;
		switch(c){
			case "1":System.out.println("Calculated tax for shipping:"+tax[0]);
			return tax[0];
		    case "2":System.out.println("Calculated tax for Air:"+tax[1]);
		    return tax[1];
		    case "3":System.out.println("Calculated tax for Road:"+tax[2]);
		    return tax[2];
		    default:System.out.println("Please enter a valid category");
			
		}
		return 0;
	}
	public void dispOrder(){
		//double tax=calTax();
		
		double Totalprice=price+calTax();
		System.out.println("orderId  OrderName Totalprice");
		System.out.println(orderId+"        "+orderName+"        "+Totalprice);
	}

}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public class TestOrder {

	public static void main(String[] args) {
		Order o1=new Order();
		Order o2=new Order();
		o1.acceptData();
		o1.dispOrder();

	}

}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
==============================================